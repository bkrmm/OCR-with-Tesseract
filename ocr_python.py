# -*- coding: utf-8 -*-
"""OCR-python.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jcmNPpbxc9kl0udSLkvlg43gs3howbjs
"""

pip install pytesseract

!sudo apt install tesseract-ocr
!pip install pytesseract

from PIL import Image
import pytesseract
import numpy as np

filename = '/content/689FDC8C-A4F5-497B-A7D6-F57F59E93DDC.png'
img1 = np.array(Image.open(filename))
text = pytesseract.image_to_string(img1)

print(text)

#Text Normalisation
import numpy as np
import cv2
norm_img = np.zeros((img1.shape[0], img1.shape[1]))
img = cv2.normalize(img1, norm_img, 0, 255, cv2.NORM_MINMAX)
img = cv2.threshold(img1, 100, 255, cv2.THRESH_BINARY)[1]
img = cv2.GaussianBlur(img1, (1, 1), 0)
img = cv2.GaussianBlur(img1, (1, 1), 0)

#Text Localisation
import pytesseract
from pytesseract import Output
import cv2
filename = 'image_01.png'
image = cv2.imread(filename)

results = pytesseract.image_to_data(image,
output_type=Output.DICT)

#Text Localisation
import pytesseract
from pytesseract import Output
import cv2
import os

# Get the absolute path to the image file
# __file__ is the path to the current script file
# os.path.dirname gives the directory containing the script
# os.path.join joins the directory with the image file name
script_dir = os.path.dirname('/content/689FDC8C-A4F5-497B-A7D6-F57F59E93DDC.png')
filename = os.path.join(script_dir, '/content/689FDC8C-A4F5-497B-A7D6-F57F59E93DDC.png')

# Check if the file exists
if not os.path.isfile(filename):
    raise FileNotFoundError(f"File not found: {filename}")

# Now read the image using the absolute path
image = cv2.imread(filename)

# If image is still None, the file may be corrupted or unreadable
if image is None:
    raise ValueError(f"Could not read image file: {filename}")

results = pytesseract.image_to_data(image,
output_type=Output.DICT)

for i in range(0, len(results["text"])):
   x = results["left"][i]
   y = results["top"][i]

   w = results["width"][i]
   h = results["height"][i]

   text = results["text"][i]
   conf = int(results["conf"][i])

   if conf > 70:
       text = "".join([c if ord(c) < 128 else "" for c in text]).strip()
       cv2.rectangle(image, (x, y), (x + w, y + h), (0, 255, 0), 2)
       cv2.putText(image, text, (x, y - 10),
cv2.FONT_HERSHEY_SIMPLEX, 0.5, (0, 0, 200), 2)

from google.colab.patches import cv2_imshow # Import the cv2_imshow function from google.colab.patches
import cv2

cv2_imshow(image)

